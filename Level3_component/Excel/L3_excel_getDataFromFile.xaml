<Activity mc:Ignorable="sap sap2010" x:Class="Level3_Component" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_boolSuccess" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_strExceptionMessage" Type="OutArgument(x:String)" />
    <x:Property Name="in_intTimeoutM" Type="InArgument(x:Int32)" />
    <x:Property Name="in_intTimeoutS" Type="InArgument(x:Int32)" />
    <x:Property Name="in_intTimeoutL" Type="InArgument(x:Int32)" />
    <x:Property Name="in_strRootFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_strProcessCode" Type="InArgument(x:String)" />
    <x:Property Name="in_strUserName" Type="InArgument(x:String)" />
    <x:Property Name="in_strAppEnvironmentName" Type="InArgument(x:String)" />
    <x:Property Name="in_strEmailAdminRpa" Type="InArgument(x:String)" />
    <x:Property Name="in_strRobotAutor" Type="InArgument(x:String)" />
    <x:Property Name="out_DictionaryValues" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_intRow" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1154,9888</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>OpenSAP_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="NAME: getDataFromXLS&#xA;DESCRIPTION: Načte jednotlivé položky daného řádku z XLS souboru a uloží je v podobě dictionary&#xA;PARENT LEVEL: L2_nacistVstupy&#xA;&#xA;KEYWORDS: &#xA;author&#xA;ean&#xA;kontaktPPP&#xA;cisloZop&#xA;mistoSpotreby&#xA;umisteniPristroje&#xA;cisloOdberMistaDistr&#xA;oznaceniSmluvnihoUctu&#xA;reas&#xA;datumPrihlaseni&#xA;odectovaJednotka&#xA;typProvozuVyrobny&#xA;resitelKontaktu&#xA;poznamka&#xA;obchodnik&#xA;obchodnikEmail&#xA;emailPredmet&#xA;kontaktniTelefon&#xA;cisloOp (AA)&#xA;cisloVyrobnihoOdbernehoMista (AD)&#xA;hodnotaSmluvniUcet (AF)" DisplayName="&lt;Level 3&gt; Component" sap:VirtualizedContainerService.HintSize="789,9683" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="&lt;L3&gt; getDataFromXLS" Name="strComponentName" />
      <Variable x:TypeArguments="x:String" Name="strNameToLog" />
      <Variable x:TypeArguments="ui:GenericValue" Name="genTmp" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap2010:Annotation.AnnotationText="strNameToLog = in_strProcessCode + &quot; | &quot; + strComponentName + &quot;: &quot;" sap:VirtualizedContainerService.HintSize="747,102" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strNameToLog]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_strProcessCode + " | " + strComponentName + ": "]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="747,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[strNameToLog + &quot;Start&quot;]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="747,353" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="346,275" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Only for tests" DisplayName="!!! TEMP !!!" sap:VirtualizedContainerService.HintSize="304,183" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Testovací hodnota řádku" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[in_intRow]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">2</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="747,8392" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="709,8165" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Do work" sap:VirtualizedContainerService.HintSize="667,7842" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_DictionaryValues]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, Object)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="625,7650" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="data\DataSet_vyplněný.xlsx">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="591,7541" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Nacteni hodnot do out_dictionayValue" sap:VirtualizedContainerService.HintSize="549,7318" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadCell Cell="[&quot;B&quot;&amp;in_intRow.ToString]" DisplayName="Read Cell &quot;author&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("author")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;Author is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;C&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;ean&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("ean")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;EAN is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;D&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;kontaktPPP&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("kontaktPPP")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;KontaktPPP is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;E&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;cisloZOP&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("cisloZOP")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;CisloZOP is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;F&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;mistoSpotreby&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("mistoSpotreby")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;MistoSpotreby is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;G&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;umisteniPristroje&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("umisteniPristroje")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;UmisteniPristroje is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;H&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;cisloOdberMistaDistr&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_7" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_7">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("cisloOdberMistaDistr")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;CisloOdbernehoMistaDistr is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;I&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;oznaceniSmluvnihoUctu&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_8" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_8">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("oznaceniSmluvnihoUctu")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;OznaceniSmluvnihoUctu is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;J&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;reas&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_9" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("reas")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;REAS is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;K&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;datumPrihlaseni&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_10">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("datumPrihlaseni")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[cdate(genTmp).ToString("dd.MM.yyyy")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;DatumPrihlaseni is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;L&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;odectovaJednotka&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_11" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("odectovaJednotka")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;OdectovaJednotka is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;M&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;typProvozuVyrobny&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_12">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("typProvozuVyrobny")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;TypProvozuVyrobny is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_12" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;N&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;resitelKontaktu&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_13">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("resitelKontaktu")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;ResitelKontaktu is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_13" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;O&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;poznamka&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_14">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("poznamka")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;Poznamka is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_14" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;P&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;obchodnik&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_15" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_15">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("obchodnik")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;Obchodnik is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_15" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;Q&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;obchodnikEmail&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_16">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("obchodnikEmail")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;ObchodnikEmail is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_16" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;R&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;emailPredmet&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_17" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_17">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("emailPredmet")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;EmailPredmet is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_17" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;S&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;kontaktniTelefon&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_18" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_18">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("kontaktniTelefon")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;KontaktniTelefon is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_18" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;AA&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;cisloOp&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_19" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_19">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("cisloOp")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;cisloOp is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_19" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;AD&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;cisloVyrobnihoOdbernehoMista&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_21">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("cisloVyrobnihoOdbernehoMista")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;cisloVyrobnihoOdbernehoMista is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_21" />
                        </If.Else>
                      </If>
                      <ui:ExcelReadCell Cell="[&quot;AF&quot;&amp;in_intRow]" DisplayName="Read Cell &quot;hodnotaSmluvniUcet&quot;" sap:VirtualizedContainerService.HintSize="507,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_20" SheetName="vstupniData">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="ui:GenericValue">[genTmp]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                      <If Condition="[genTmp.ToString &lt;&gt;&quot;&quot;]" DisplayName="Validace existence hodnoty" sap:VirtualizedContainerService.HintSize="507,207" sap2010:WorkflowViewState.IdRef="If_20">
                        <If.Then>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionaryValues("hodnotaSmluvniUcet")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[genTmp]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[New BusinessRuleException(&quot;HodnotaSmluvniUcet is empty&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_20" />
                        </If.Else>
                      </If>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="549,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;author: &quot;&amp; out_DictionaryValues(&quot;author&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;ean: &quot;&amp; out_DictionaryValues(&quot;ean&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;kontaktPPP: &quot;&amp; out_DictionaryValues(&quot;kontaktPPP&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;cisloZOP: &quot;&amp; out_DictionaryValues(&quot;cisloZOP&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;mistoSpotreby: &quot;&amp; out_DictionaryValues(&quot;mistoSpotreby&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;umisteniPristroje: &quot;&amp; out_DictionaryValues(&quot;umisteniPristroje&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;cisloOdbernehoMistaDistr: &quot;&amp; out_DictionaryValues(&quot;cisloOdberMistaDistr&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;oznaceniSmluvnihoUctu: &quot;&amp; out_DictionaryValues(&quot;oznaceniSmluvnihoUctu&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;reas: &quot;&amp; out_DictionaryValues(&quot;reas&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;datumPrihlaseni: &quot;&amp; out_DictionaryValues(&quot;datumPrihlaseni&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;odectovaJednotka: &quot;&amp; out_DictionaryValues(&quot;odectovaJednotka&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;typProvozuVyrobny: &quot;&amp; out_DictionaryValues(&quot;typProvozuVyrobny&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;resitelKontaktu: &quot;&amp; out_DictionaryValues(&quot;resitelKontaktu&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;poznamka: &quot;&amp; out_DictionaryValues(&quot;poznamka&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;obchodnik: &quot;&amp; out_DictionaryValues(&quot;obchodnik&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;obchodnikEmail: &quot;&amp; out_DictionaryValues(&quot;obchodnikEmail&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;emailPredmet: &quot;&amp; out_DictionaryValues(&quot;emailPredmet&quot;).ToString &amp; vbcrlf &amp;&#xA;&quot;kontaktniTelefon: &quot;&amp; out_DictionaryValues(&quot;kontaktniTelefon&quot;).ToString &amp; vbcrlf]" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
          <Assign sap:VirtualizedContainerService.HintSize="667,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_boolSuccess]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">[True]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="667,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[strNameToLog + &quot;Success&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="713,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[strNameToLog + &quot; failed: &quot; + exception.Message]" />
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[out_boolSuccess]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_strExceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strComponentName + " failed: " + exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="747,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[strNameToLog + &quot;End&quot;]" />
  </Sequence>
</Activity>